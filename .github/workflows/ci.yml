# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.114.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.17.1

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
            npm install

      - name: Debug
        run: |
          ls -al
          cat commitlint.config.js
          git log --oneline -n 10

      - name: Lint commit message
        run: |
          npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: ./public


  # Deployment job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out main
        uses: actions/checkout@master
        with:
          ref: main

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: public
          path: ./public

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli
        if: success()  # Only run if previous steps were successful

      - name: Deploy to S3
        run: |
          aws s3 sync public/ s3://jedi-knights.tech
        env:
          AWS_S3_BUCKET_URL: s3://jedi-knights.tech
